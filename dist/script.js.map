{"version":3,"sources":["app/js/script.js","app/js/modules/dark_theme.js","app/js/modules/task.js","app/js/modules/drag_drop.js"],"names":["factory","define","amd","d","document","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","listTasks","setTask","form","txtnewTask","$btnAllTasks","getElementById","$detailsTasks","querySelectorAll","task","id","Date","now","state","classActive","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread2","classList","contains","alert","detailsTasksActions","drawTask","reset","$tasksContainer","querySelector","$dataTaskActions","$countTasks","$templateTask","content","$fragment","createDocumentFragment","localStorage","setItem","JSON","stringify","entries","add","innerHTML","remove","values","_ref","$clone","cloneNode","textContent","dataset","concat","setAttribute","appendChild","taskActions","e","$btnActiveTasks","$btnCompletedTasks","matches","$todoTask","parentElement","activeTask","replace","tasksLength","showAndHiddenTasks","$task","todoTaskOperations","$btnClearCompleted","todoAllTasks","_ref2","details","detail","active","undefined","countTask","completedTask","_ref3","optionTask","_ref4","$idTask","style","display","dragAndDrop","indexDragTask","indexDropTask","$containerTasks","addEventListener","drag","assignIdDragAndDrop","transform","preventDefault","$target","drop","children","insertAdjacentElement","indexDrag","indexDrop","idDrag","idDrop","listTasksCopy","taskDrag","taskId","flat","taskDrop","splice","v","$form","index","dataTransfer","setData","desc","pointerEvents","data","getData","lightTheme","body","changeThemeImage","darkTheme","imgSrc","alt","$imgDarkTheme","matchMedia","getItem","$txtnewTask","parse"],"mappings":"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","file":"app/js/script.js","sourcesContent":["import darkTheme from \"./modules/dark_theme.js\";\r\nimport dragAndDrop from \"./modules/drag_drop.js\";\r\nimport todoTask from \"./modules/task.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\r\n  dragAndDrop();\r\n});\r\n\r\ndarkTheme();\r\ntodoTask();\r\n","const d = document;\r\n\r\nexport default function darkTheme() {\r\n  let mq = matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  function lightTheme() {\r\n    d.body.classList.remove(\"dark-theme\");\r\n    d.body.classList.add(\"light-theme\");\r\n    changeThemeImage(\"moon\", \"Icon Dark Mode\");\r\n    localStorage.setItem(\"theme\", \"light\");\r\n  }\r\n\r\n  function darkTheme() {\r\n    d.body.classList.add(\"dark-theme\");\r\n    d.body.classList.remove(\"light-theme\");\r\n    changeThemeImage(\"sun\", \"Icon Light Mode\");\r\n    localStorage.setItem(\"theme\", \"dark\");\r\n  }\r\n\r\n  function changeThemeImage(imgSrc, alt) {\r\n    const $imgDarkTheme = d.querySelector(\".dark-theme-img [data-icon-theme]\");\r\n    $imgDarkTheme.setAttribute(\"src\", `./images/icon-${imgSrc}.svg`);\r\n    $imgDarkTheme.setAttribute(\"alt\", alt);\r\n  }\r\n\r\n  function changeTheme(e) {\r\n    e.matches ? darkTheme() : lightTheme();\r\n  }\r\n  mq.addEventListener(\"change\", changeTheme);\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    if (e.target.matches(\".dark-theme-img\")) {\r\n      if (d.body.classList.contains(\"dark-theme\")) {\r\n        lightTheme();\r\n      } else {\r\n        darkTheme();\r\n      }\r\n    }\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (localStorage.getItem(\"theme\") === undefined) localStorage.setItem(\"theme\", \"light\");\r\n    if (localStorage.getItem(\"theme\") === \"light\") lightTheme();\r\n    if (localStorage.getItem(\"theme\") === \"dark\") darkTheme();\r\n  });\r\n}\r\n","const d = document;\r\n\r\n//List Of Tasks (Global) - Applied let for used localStorage\r\nexport let listTasks = {};\r\n\r\n//Assign list an export , for capture object ListTasks (Used in module (drag_drop))\r\nexport function setListTasks(copyListTasks) {\r\n  listTasks = copyListTasks;\r\n  localStorage.setItem(\"todo-list\", JSON.stringify(listTasks));\r\n}\r\n\r\nexport default function todoTask() {\r\n  const $form = d.getElementById(\"formTodo\");\r\n\r\n  $form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const $txtnewTask = $form.txtnewTask.value;\r\n    setTask(e.target, $txtnewTask);\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", (e) => {\r\n    if (localStorage.getItem(\"todo-list\")) {\r\n      listTasks = JSON.parse(localStorage.getItem(\"todo-list\"));\r\n    }\r\n    drawTask();\r\n  });\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    taskActions(e);\r\n    todoTaskOperations(e);\r\n  });\r\n}\r\n\r\n//Assign task to object listTasks\r\nconst setTask = (form, txtnewTask) => {\r\n  //Validity whitespace in the input new Task\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  const $detailsTasks = d.querySelectorAll(\".todo-details-btn\");\r\n\r\n  if (txtnewTask === \"\") {\r\n    alert(\"Empty field, Please enter a task😉😉\");\r\n    return;\r\n  }\r\n  //Create Task\r\n  const task = {\r\n    id: Date.now(),\r\n    task: txtnewTask,\r\n    state: false,\r\n    classActive: \"_\",\r\n  };\r\n\r\n  //Object of the Task (Global)\r\n  listTasks[task.id] = { ...task };\r\n\r\n  if (!$btnAllTasks.classList.contains(\"active\")) {\r\n    alert(\"Active and completed tasks!!! 😎😎😎\");\r\n    detailsTasksActions($detailsTasks, $btnAllTasks);\r\n  }\r\n\r\n  //Draw task\r\n  drawTask();\r\n\r\n  //Reset form\r\n  form.reset();\r\n};\r\n\r\n//Draw mi tasks\r\nexport const drawTask = () => {\r\n  const $tasksContainer = d.querySelector(\".todo-tasks-container\");\r\n  const $dataTaskActions = d.querySelectorAll(\"[data-tasks-actions]\");\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $templateTask = d.getElementById(\"template-task\").content;\r\n  const $fragment = d.createDocumentFragment();\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  localStorage.setItem(\"todo-list\", JSON.stringify(listTasks));\r\n\r\n  //Without Task\r\n  if (Object.entries(listTasks).length === 0) {\r\n    $dataTaskActions.forEach((task) => task.classList.add(\"is-active\"));\r\n    $tasksContainer.innerHTML = `<div class=\"todo-tasks-empty\">\r\n    There are no pending tasks 😊😎</div>`;\r\n    return;\r\n  }\r\n\r\n  //With Task\r\n  $tasksContainer.innerHTML = \"\";\r\n  $dataTaskActions.forEach((task) => task.classList.remove(\"is-active\"));\r\n  Object.values(listTasks).forEach(({ id, task, state, classActive }) => {\r\n    const $clone = $templateTask.cloneNode(true);\r\n    $clone.querySelector(\".todo-task-description > p\").textContent = task;\r\n    $clone.querySelector(\".todo-task\").dataset.state = state;\r\n    $clone.querySelector(\".todo-task\").classList.add(`${classActive}`);\r\n    $clone.querySelector(`.todo-task`).dataset.id = id;\r\n    $clone.querySelector(`.todo-task`).setAttribute(\"draggable\", true);\r\n    $fragment.appendChild($clone);\r\n  });\r\n\r\n  if ($btnAllTasks.classList.contains(\"active\")) {\r\n    $countTasks.textContent = Object.values(listTasks).length;\r\n  }\r\n\r\n  $tasksContainer.appendChild($fragment);\r\n};\r\n\r\n//Tasks\r\nconst taskActions = (e) => {\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n\r\n  //Task selected , completed and incompleted\r\n  if (e.target.matches(\".todo-task-description\") || e.target.matches(\".todo-task-description > *\")) {\r\n    const $taskDescription = e.target.matches(\".todo-task-description\");\r\n    const $todoTask = $taskDescription ? e.target.parentElement : e.target.parentElement.parentElement;\r\n    let activeTask = \"is-active\";\r\n\r\n    if ($todoTask.dataset.state == \"false\") {\r\n      $todoTask.classList.replace(\"_\", `${activeTask}`);\r\n      $todoTask.dataset.state = \"true\";\r\n      listTasks[$todoTask.dataset.id].classActive = `${activeTask}`;\r\n      listTasks[$todoTask.dataset.id].state = true;\r\n    } else {\r\n      $todoTask.classList.replace(`${activeTask}`, \"_\");\r\n      $todoTask.dataset.state = \"false\";\r\n      listTasks[$todoTask.dataset.id].classActive = \"_\";\r\n      listTasks[$todoTask.dataset.id].state = false;\r\n    }\r\n\r\n    if ($btnActiveTasks.classList.contains(\"active\")) {\r\n      tasksLength(false, $countTasks);\r\n      showAndHiddenTasks(true);\r\n    }\r\n\r\n    if ($btnCompletedTasks.classList.contains(\"active\")) {\r\n      tasksLength(true, $countTasks);\r\n      showAndHiddenTasks(false);\r\n    }\r\n  }\r\n\r\n  //Delete Task\r\n  if (e.target.matches(\".todo-task-delete\")) {\r\n    const $task = e.target.parentElement;\r\n    delete listTasks[$task.dataset.id];\r\n    drawTask();\r\n  }\r\n  //Change in the classActive , applied transitions for that reason with two localStorage\r\n  localStorage.setItem(\"todo-list\", JSON.stringify(listTasks));\r\n};\r\n\r\n//Operations Tasks\r\nconst todoTaskOperations = (e) => {\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n  const $detailsTasks = d.querySelectorAll(\".todo-details-btn\");\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $btnClearCompleted = d.getElementById(\"btnClearCompleted\");\r\n\r\n  if (e.target.matches(\".todo-details-btn\")) {\r\n    detailsTasksActions($detailsTasks, e.target);\r\n  }\r\n\r\n  if (e.target === $btnAllTasks) {\r\n    todoAllTasks($detailsTasks);\r\n  }\r\n\r\n  if (e.target === $btnActiveTasks) {\r\n    drawTask();\r\n    tasksLength(false, $countTasks);\r\n    showAndHiddenTasks(true);\r\n  }\r\n\r\n  if (e.target === $btnCompletedTasks) {\r\n    drawTask();\r\n    tasksLength(true, $countTasks);\r\n    showAndHiddenTasks(false);\r\n  }\r\n\r\n  if (e.target === $btnClearCompleted) {\r\n    const lengthTaskActive = Object.values(listTasks).filter(({ state }) => state).length;\r\n    if (lengthTaskActive > 0) {\r\n      alert(\"Completed tasks were cleaned correctly 😎😎\");\r\n    } else {\r\n      alert(\"No tasks completed 😒😒\");\r\n    }\r\n    showAndHiddenTasks(true, false);\r\n    drawTask();\r\n    detailsTasksActions($detailsTasks, $btnAllTasks);\r\n  }\r\n};\r\n\r\nconst detailsTasksActions = (details, target) => {\r\n  details.forEach((detail) => {\r\n    detail.classList.remove(\"active\");\r\n  });\r\n  target.classList.add(\"active\");\r\n};\r\n\r\nconst todoAllTasks = () => {\r\n  drawTask();\r\n};\r\n\r\n//Active and Completed Tasks (length)\r\nconst tasksLength = (active = true, countTask) => {\r\n  const completedTask = Object.values(listTasks).filter(({ state }) => state === active).length;\r\n  countTask.textContent = completedTask;\r\n};\r\n\r\n//Show and Hidden Task (Active - Complete) , active = state of the taks\r\n// optionTask = true default , false = deleteTasks Completed\r\nconst showAndHiddenTasks = (active = true, optionTask = true) => {\r\n  Object.values(listTasks).filter(({ id, state }) => {\r\n    if (state === active) {\r\n      d.querySelectorAll(\".todo-task\").forEach((task) => {\r\n        const $idTask = task.dataset.id;\r\n        if (id == $idTask) {\r\n          optionTask ? (task.style.display = \"none\") : delete listTasks[$idTask];\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n","const d = document;\r\nimport { listTasks, setListTasks } from \"./task\";\r\n\r\nexport default function dragAndDrop() {\r\n  const $containerTasks = d.getElementById(\"todoContainer\");\r\n  let indexDragTask, indexDropTask;\r\n\r\n  $containerTasks.addEventListener(\"dragstart\", (e) => {\r\n    drag(e);\r\n    indexDragTask = assignIdDragAndDrop(e);\r\n    e.target.style.transform = \"scale(1.03)\";\r\n  });\r\n\r\n  $containerTasks.addEventListener(\"dragover\", (e) => {\r\n    e.preventDefault();\r\n  });\r\n\r\n  $containerTasks.addEventListener(\"dragend\", (e) => {\r\n    e.target.style.transform = \"scale(1)\";\r\n  });\r\n\r\n  $containerTasks.addEventListener(\"drop\", (e) => {\r\n    indexDropTask = assignIdDragAndDrop(e);\r\n    const $target = drop(e);\r\n\r\n    //SELECTED FROM UP TO DOWN - ALSO APPLIED REVERSE\r\n    if (indexDragTask <= indexDropTask) {\r\n      $containerTasks.children[indexDragTask].insertAdjacentElement(\"afterend\", e.target);\r\n      $containerTasks.children[indexDropTask].insertAdjacentElement(\"afterend\", $target);\r\n    } else {\r\n      $containerTasks.children[indexDragTask].insertAdjacentElement(\"beforebegin\", e.target);\r\n      $containerTasks.children[indexDropTask].insertAdjacentElement(\"beforebegin\", $target);\r\n    }\r\n\r\n    //e.target = donde termina el arrastre , $target = de donde inicio\r\n    let idDrag = $target.dataset.id;\r\n    let idDrop = e.target.dataset.id;\r\n    let indexDrag, indexDrop;\r\n\r\n    //Convert Object to Array , used for orders Elements Of the DOM\r\n    let listTasksCopy = Object.entries(listTasks);\r\n    //Obtain index of the element DRAG and return the object element\r\n    //Filter and capture results and compress array bidim.\r\n    let taskDrag = Object.entries(listTasks)\r\n      .filter((taskId, i) => {\r\n        if (taskId[0] == idDrag) {\r\n          indexDrag = i;\r\n          return taskId[0];\r\n        }\r\n      })\r\n      .flat(1);\r\n\r\n    let taskDrop = Object.entries(listTasks)\r\n      .filter((taskId, i) => {\r\n        if (taskId[0] == idDrop) {\r\n          indexDrop = i;\r\n          return taskId[0];\r\n        }\r\n      })\r\n      .flat(1);\r\n\r\n    //Delete element of the indexDrop and IndexDrag\r\n    listTasksCopy.splice(indexDrop, 1, taskDrag);\r\n    listTasksCopy.splice(indexDrag, 1, taskDrop);\r\n\r\n    //Function where captured first Property and used key\r\n    function arrTwoDimensionsToObject(arr) {\r\n      let obj = {};\r\n      arr.forEach((v) => {\r\n        let key = v[0];\r\n        let value = v[1];\r\n        obj[key] = value;\r\n      });\r\n      return obj;\r\n    }\r\n\r\n    //Assign Object preformatted (This function come module Task)\r\n    setListTasks(arrTwoDimensionsToObject(listTasksCopy));\r\n  });\r\n}\r\n\r\n//Assign Id , drag and drop , used for the insertElement\r\nconst assignIdDragAndDrop = (e) => {\r\n  let index = null;\r\n  d.querySelectorAll(\".todo-task\").forEach((task, i) => {\r\n    if (e.target.dataset.id === task.dataset.id) {\r\n      index = i;\r\n      return;\r\n    }\r\n  });\r\n  return index;\r\n};\r\n\r\n//Drag and Drop\r\nconst drag = (e) => {\r\n  e.dataTransfer.setData(\"text/plain\", e.target.dataset.id);\r\n  //Disbaled task-descricption\r\n  d.querySelectorAll(\".todo-task-description\").forEach((desc) => {\r\n    desc.style.pointerEvents = \"none\";\r\n  });\r\n  // e.dataTransfer.effectAllowed = \"none\";\r\n};\r\n\r\nconst drop = (e) => {\r\n  e.preventDefault();\r\n  const data = e.dataTransfer.getData(\"text\");\r\n  const $target = d.querySelector(`.todo-task[data-id=\"${data}\"]`);\r\n\r\n  //Enabled task-descricption\r\n  d.querySelectorAll(\".todo-task-description\").forEach((desc) => {\r\n    desc.style.pointerEvents = \"auto\";\r\n  });\r\n\r\n  return $target;\r\n};\r\n"]}