{"version":3,"sources":["app/js/script.js","app/js/modules/dark_theme.js","app/js/modules/task.js"],"names":["factory","define","amd","d","document","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","listTasks","indexDragTask","indexDropTask","$form","$containerTasks","drawTask","$tasksContainer","querySelector","$dataTaskActions","querySelectorAll","$countTasks","$templateTask","getElementById","content","$fragment","createDocumentFragment","$btnAllTasks","entries","length","forEach","task","classList","add","innerHTML","remove","values","_ref","id","state","classActive","$clone","cloneNode","textContent","dataset","concat","setAttribute","appendChild","contains","setTask","form","txtnewTask","$detailsTasks","Date","now","target","i","arguments","source","getOwnPropertyDescriptors","defineProperties","_objectSpread2","alert","detailsTasksActions","reset","taskActions","e","$btnActiveTasks","$btnCompletedTasks","matches","$todoTask","parentElement","activeTask","replace","tasksLength","showAndHiddenTasks","$task","todoTaskOperations","$btnClearCompleted","todoAllTasks","_ref2","details","detail","active","undefined","countTask","completedTask","_ref3","optionTask","_ref4","$idTask","style","display","lightTheme","body","changeThemeImage","localStorage","setItem","darkTheme","imgSrc","alt","$imgDarkTheme","matchMedia","addEventListener","getItem","preventDefault","$txtnewTask","dataTransfer","setData","desc","pointerEvents","data","getData","$target","children","insertAdjacentElement"],"mappings":"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","file":"app/js/script.js","sourcesContent":["import darkTheme from \"./modules/dark_theme.js\";\r\nimport todoTask from \"./modules/task.js\";\r\n\r\ndarkTheme();\r\ntodoTask();\r\n","const d = document;\r\n\r\nexport default function darkTheme() {\r\n  let mq = matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  function lightTheme() {\r\n    d.body.classList.remove(\"dark-theme\");\r\n    d.body.classList.add(\"light-theme\");\r\n    changeThemeImage(\"moon\", \"Icon Dark Mode\");\r\n    localStorage.setItem(\"theme\", \"light\");\r\n  }\r\n\r\n  function darkTheme() {\r\n    d.body.classList.add(\"dark-theme\");\r\n    d.body.classList.remove(\"light-theme\");\r\n    changeThemeImage(\"sun\", \"Icon Light Mode\");\r\n    localStorage.setItem(\"theme\", \"dark\");\r\n  }\r\n\r\n  function changeThemeImage(imgSrc, alt) {\r\n    const $imgDarkTheme = d.querySelector(\".dark-theme-img [data-icon-theme]\");\r\n    $imgDarkTheme.setAttribute(\"src\", `./images/icon-${imgSrc}.svg`);\r\n    $imgDarkTheme.setAttribute(\"alt\", alt);\r\n  }\r\n\r\n  function changeTheme(e) {\r\n    e.matches ? darkTheme() : lightTheme();\r\n  }\r\n  mq.addEventListener(\"change\", changeTheme);\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    if (e.target.matches(\".dark-theme-img\")) {\r\n      if (d.body.classList.contains(\"dark-theme\")) {\r\n        lightTheme();\r\n      } else {\r\n        darkTheme();\r\n      }\r\n    }\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (localStorage.getItem(\"theme\") === undefined) localStorage.setItem(\"theme\", \"light\");\r\n    if (localStorage.getItem(\"theme\") === \"light\") lightTheme();\r\n    if (localStorage.getItem(\"theme\") === \"dark\") darkTheme();\r\n  });\r\n}\r\n","const d = document;\r\n\r\n//List Of Tasks (Global)\r\nconst listTasks = {};\r\n\r\nexport default function todoTask() {\r\n  const $form = d.getElementById(\"formTodo\");\r\n  const $containerTasks = d.getElementById(\"todoContainer\");\r\n  let indexDragTask, indexDropTask;\r\n\r\n  $form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const $txtnewTask = $form.txtnewTask.value;\r\n    setTask(e.target, $txtnewTask);\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", (e) => {\r\n    drawTask();\r\n  });\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    taskActions(e);\r\n    todoTaskOperations(e);\r\n  });\r\n\r\n  $containerTasks.addEventListener(\"dragstart\", (e) => {\r\n    e.dataTransfer.setData(\"text/plain\", e.target.dataset.id);\r\n\r\n    //Disbaled task-descricption\r\n    d.querySelectorAll(\".todo-task-description\").forEach((desc) => {\r\n      desc.style.pointerEvents = \"none\";\r\n    });\r\n\r\n    d.querySelectorAll(\".todo-task\").forEach((task, i) => {\r\n      if (e.target.dataset.id === task.dataset.id) {\r\n        indexDragTask = i;\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  $containerTasks.addEventListener(\"dragover\", (e) => {\r\n    e.preventDefault();\r\n  });\r\n\r\n  $containerTasks.addEventListener(\"drop\", (e) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer.getData(\"text\");\r\n    const $target = d.querySelector(`.todo-task[data-id=\"${data}\"]`);\r\n\r\n    d.querySelectorAll(\".todo-task\").forEach((task, i) => {\r\n      if (e.target.dataset.id === task.dataset.id) {\r\n        indexDropTask = i;\r\n        return;\r\n      }\r\n    });\r\n\r\n    $containerTasks.children[indexDragTask].insertAdjacentElement(\"afterend\", e.target);\r\n    $containerTasks.children[indexDropTask].insertAdjacentElement(\"afterend\", $target);\r\n\r\n    // console.log($containerTasks.children[indexDragTask]);\r\n    // $containerTasks.insertBefore($target, $containerTasks.children[indexDragTask]);\r\n\r\n    //Enabled task-descricption\r\n    d.querySelectorAll(\".todo-task-description\").forEach((desc) => {\r\n      desc.style.pointerEvents = \"auto\";\r\n    });\r\n\r\n    // console.log($target, e.target);\r\n  });\r\n}\r\n\r\n//Dibujar mis tareas\r\nconst drawTask = () => {\r\n  const $tasksContainer = d.querySelector(\".todo-tasks-container\");\r\n  const $dataTaskActions = d.querySelectorAll(\"[data-tasks-actions]\");\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $templateTask = d.getElementById(\"template-task\").content;\r\n  const $fragment = d.createDocumentFragment();\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n\r\n  //Without Task\r\n  if (Object.entries(listTasks).length === 0) {\r\n    $dataTaskActions.forEach((task) => task.classList.add(\"is-active\"));\r\n    $tasksContainer.innerHTML = `<div class=\"todo-tasks-empty\">No hay tareas pendientes 😊😎</div>`;\r\n    return;\r\n  }\r\n\r\n  //With Task\r\n  $tasksContainer.innerHTML = \"\";\r\n  $dataTaskActions.forEach((task) => task.classList.remove(\"is-active\"));\r\n  Object.values(listTasks).forEach(({ id, task, state, classActive }) => {\r\n    const $clone = $templateTask.cloneNode(true);\r\n    $clone.querySelector(\".todo-task-description > p\").textContent = task;\r\n    $clone.querySelector(\".todo-task\").dataset.state = state;\r\n    $clone.querySelector(\".todo-task\").classList.add(`${classActive}`);\r\n    $clone.querySelector(`.todo-task`).dataset.id = id;\r\n    $clone.querySelector(`.todo-task`).setAttribute(\"draggable\", true);\r\n    $fragment.appendChild($clone);\r\n  });\r\n\r\n  if ($btnAllTasks.classList.contains(\"active\")) {\r\n    $countTasks.textContent = Object.values(listTasks).length;\r\n  }\r\n\r\n  $tasksContainer.appendChild($fragment);\r\n};\r\n\r\n//Assign task to object listTasks\r\nconst setTask = (form, txtnewTask) => {\r\n  //Validity whitespace in the input new Task\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  const $detailsTasks = d.querySelectorAll(\".todo-details-btn\");\r\n\r\n  if (txtnewTask === \"\") {\r\n    alert(\"Campo vacio , Favor Ingresa una tarea 😉😉\");\r\n    return;\r\n  }\r\n  //Create Task\r\n  const task = {\r\n    id: Date.now(),\r\n    task: txtnewTask,\r\n    state: false,\r\n    classActive: \"_\",\r\n  };\r\n\r\n  //Object of the Task (Global)\r\n  listTasks[task.id] = { ...task };\r\n\r\n  if (!$btnAllTasks.classList.contains(\"active\")) {\r\n    alert(\"Tareas activas y completadas!! 😎😎😎\");\r\n    detailsTasksActions($detailsTasks, $btnAllTasks);\r\n  }\r\n\r\n  //Draw task\r\n  drawTask();\r\n\r\n  //Reset form\r\n  form.reset();\r\n};\r\n\r\n//Tasks\r\nconst taskActions = (e) => {\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n\r\n  //Task selected , completed and incompleted\r\n  if (e.target.matches(\".todo-task-description\") || e.target.matches(\".todo-task-description > *\")) {\r\n    const $taskDescription = e.target.matches(\".todo-task-description\");\r\n    const $todoTask = $taskDescription ? e.target.parentElement : e.target.parentElement.parentElement;\r\n    let activeTask = \"is-active\";\r\n\r\n    if ($todoTask.dataset.state == \"false\") {\r\n      $todoTask.classList.replace(\"_\", `${activeTask}`);\r\n      $todoTask.dataset.state = \"true\";\r\n      listTasks[$todoTask.dataset.id].classActive = `${activeTask}`;\r\n      listTasks[$todoTask.dataset.id].state = true;\r\n    } else {\r\n      $todoTask.classList.replace(`${activeTask}`, \"_\");\r\n      $todoTask.dataset.state = \"false\";\r\n      listTasks[$todoTask.dataset.id].classActive = \"_\";\r\n      listTasks[$todoTask.dataset.id].state = false;\r\n    }\r\n\r\n    if ($btnActiveTasks.classList.contains(\"active\")) {\r\n      tasksLength(false, $countTasks);\r\n      showAndHiddenTasks(true);\r\n    }\r\n\r\n    if ($btnCompletedTasks.classList.contains(\"active\")) {\r\n      tasksLength(true, $countTasks);\r\n      showAndHiddenTasks(false);\r\n    }\r\n  }\r\n\r\n  //Delete Task\r\n  if (e.target.matches(\".todo-task-delete\")) {\r\n    const $task = e.target.parentElement;\r\n    delete listTasks[$task.dataset.id];\r\n    drawTask();\r\n  }\r\n};\r\n\r\n//Operations Tasks\r\nconst todoTaskOperations = (e) => {\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n  const $detailsTasks = d.querySelectorAll(\".todo-details-btn\");\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $btnClearCompleted = d.getElementById(\"btnClearCompleted\");\r\n\r\n  if (e.target.matches(\".todo-details-btn\")) {\r\n    detailsTasksActions($detailsTasks, e.target);\r\n  }\r\n\r\n  if (e.target === $btnAllTasks) {\r\n    todoAllTasks($detailsTasks);\r\n  }\r\n\r\n  if (e.target === $btnActiveTasks) {\r\n    drawTask();\r\n    tasksLength(false, $countTasks);\r\n    showAndHiddenTasks(true);\r\n  }\r\n\r\n  if (e.target === $btnCompletedTasks) {\r\n    drawTask();\r\n    tasksLength(true, $countTasks);\r\n    showAndHiddenTasks(false);\r\n  }\r\n\r\n  if (e.target === $btnClearCompleted) {\r\n    const lengthTaskActive = Object.values(listTasks).filter(({ state }) => state).length;\r\n    if (lengthTaskActive > 0) {\r\n      alert(\"Se limpio correctamente las tareas completadas 😎😎\");\r\n    } else {\r\n      alert(\"No hay tareas cumplidas 😒😒\");\r\n    }\r\n    showAndHiddenTasks(true, false);\r\n    drawTask();\r\n    detailsTasksActions($detailsTasks, $btnAllTasks);\r\n  }\r\n};\r\n\r\nconst detailsTasksActions = (details, target) => {\r\n  details.forEach((detail) => {\r\n    detail.classList.remove(\"active\");\r\n  });\r\n  target.classList.add(\"active\");\r\n};\r\n\r\nconst todoAllTasks = () => {\r\n  drawTask();\r\n};\r\n\r\n//Active and Completed Tasks (length)\r\nconst tasksLength = (active = true, countTask) => {\r\n  const completedTask = Object.values(listTasks).filter(({ state }) => state === active).length;\r\n  countTask.textContent = completedTask;\r\n};\r\n\r\n//Show and Hidden Task (Active - Complete) , active = state of the taks\r\n// optionTask = true default , false = deleteTasks Completed\r\nconst showAndHiddenTasks = (active = true, optionTask = true) => {\r\n  Object.values(listTasks).filter(({ id, state }) => {\r\n    if (state === active) {\r\n      d.querySelectorAll(\".todo-task\").forEach((task) => {\r\n        const $idTask = task.dataset.id;\r\n        if (id == $idTask) {\r\n          optionTask ? (task.style.display = \"none\") : delete listTasks[$idTask];\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n//Drag and Drop\r\nconst drag = (e) => {\r\n  console.log(e.target);\r\n  e.dataTransfer.setData(\"text/plain\", e.target.dataset.id);\r\n  console.log(e.target.dataTransfer.getData(\"text\"));\r\n  e.dataTransfer.effectAllowed = \"move\";\r\n};\r\n\r\nconst drop = (e) => {\r\n  const data = e.dataTransfer.getData(\"text\");\r\n  console.log(data);\r\n  e.target.appendChild(data);\r\n};\r\n"]}