{"version":3,"sources":["app/js/script.js","app/js/modules/dark_theme.js","app/js/modules/task.js"],"names":["factory","define","amd","d","document","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","listTasks","$form","drawTask","$tasksContainer","querySelector","$dataTaskActions","querySelectorAll","$countTasks","$templateTask","getElementById","content","$fragment","createDocumentFragment","$btnAllTasks","entries","length","forEach","task","classList","add","innerHTML","remove","values","_ref","id","state","classActive","$clone","cloneNode","textContent","dataset","concat","appendChild","contains","setTask","form","txtnewTask","Date","now","target","i","arguments","source","getOwnPropertyDescriptors","defineProperties","_objectSpread2","reset","alert","taskActions","e","$btnActiveTasks","$btnCompletedTasks","matches","$todoTask","parentElement","activeTask","replace","tasksLength","showAndHiddenTasks","$task","todoTaskOperations","$detailsTasks","$btnClearCompleted","detailsTasksActions","todoAllTasks","_ref2","details","detail","active","undefined","countTask","completedTask","_ref3","optionTask","_ref4","$idTask","style","display","lightTheme","body","changeThemeImage","localStorage","setItem","darkTheme","imgSrc","alt","$imgDarkTheme","setAttribute","matchMedia","addEventListener","getItem","preventDefault","$txtnewTask"],"mappings":"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","file":"app/js/script.js","sourcesContent":["import darkTheme from \"./modules/dark_theme.js\";\r\nimport todoTask from \"./modules/task.js\";\r\n\r\ndarkTheme();\r\ntodoTask();\r\n","const d = document;\r\n\r\nexport default function darkTheme() {\r\n  let mq = matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  function lightTheme() {\r\n    d.body.classList.remove(\"dark-theme\");\r\n    d.body.classList.add(\"light-theme\");\r\n    changeThemeImage(\"moon\", \"Icon Dark Mode\");\r\n    localStorage.setItem(\"theme\", \"light\");\r\n  }\r\n\r\n  function darkTheme() {\r\n    d.body.classList.add(\"dark-theme\");\r\n    d.body.classList.remove(\"light-theme\");\r\n    changeThemeImage(\"sun\", \"Icon Light Mode\");\r\n    localStorage.setItem(\"theme\", \"dark\");\r\n  }\r\n\r\n  function changeThemeImage(imgSrc, alt) {\r\n    const $imgDarkTheme = d.querySelector(\".dark-theme-img [data-icon-theme]\");\r\n    $imgDarkTheme.setAttribute(\"src\", `./images/icon-${imgSrc}.svg`);\r\n    $imgDarkTheme.setAttribute(\"alt\", alt);\r\n  }\r\n\r\n  function changeTheme(e) {\r\n    e.matches ? darkTheme() : lightTheme();\r\n  }\r\n  mq.addEventListener(\"change\", changeTheme);\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    if (e.target.matches(\".dark-theme-img\")) {\r\n      if (d.body.classList.contains(\"dark-theme\")) {\r\n        lightTheme();\r\n      } else {\r\n        darkTheme();\r\n      }\r\n    }\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (localStorage.getItem(\"theme\") === undefined) localStorage.setItem(\"theme\", \"light\");\r\n    if (localStorage.getItem(\"theme\") === \"light\") lightTheme();\r\n    if (localStorage.getItem(\"theme\") === \"dark\") darkTheme();\r\n  });\r\n}\r\n","const d = document;\r\n\r\n//List Of Tasks (Global)\r\nconst listTasks = {};\r\n\r\nexport default function todoTask() {\r\n  const $form = d.getElementById(\"formTodo\");\r\n\r\n  $form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const $txtnewTask = $form.txtnewTask.value;\r\n    setTask(e.target, $txtnewTask);\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", (e) => {\r\n    drawTask();\r\n  });\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    taskActions(e);\r\n    todoTaskOperations(e);\r\n  });\r\n}\r\n\r\n//Dibujar mis tareas\r\nconst drawTask = () => {\r\n  const $tasksContainer = d.querySelector(\".todo-tasks-container\");\r\n  const $dataTaskActions = d.querySelectorAll(\"[data-tasks-actions]\");\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $templateTask = d.getElementById(\"template-task\").content;\r\n  const $fragment = d.createDocumentFragment();\r\n\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n\r\n  //Without Task\r\n  if (Object.entries(listTasks).length === 0) {\r\n    $dataTaskActions.forEach((task) => task.classList.add(\"is-active\"));\r\n    $tasksContainer.innerHTML = `<div class=\"todo-tasks-empty\">No hay tareas pendientes 😊😎</div>`;\r\n    return;\r\n  }\r\n\r\n  //With Task\r\n  $tasksContainer.innerHTML = \"\";\r\n  $dataTaskActions.forEach((task) => task.classList.remove(\"is-active\"));\r\n  Object.values(listTasks).forEach(({ id, task, state, classActive }) => {\r\n    const $clone = $templateTask.cloneNode(true);\r\n    $clone.querySelector(\".todo-task-description > p\").textContent = task;\r\n    $clone.querySelector(\".todo-task\").dataset.state = state;\r\n    $clone.querySelector(\".todo-task\").classList.add(`${classActive}`);\r\n    $clone.querySelector(`.todo-task`).dataset.id = id;\r\n    $fragment.appendChild($clone);\r\n  });\r\n\r\n  if ($btnAllTasks.classList.contains(\"active\")) {\r\n    $countTasks.textContent = Object.values(listTasks).length;\r\n  }\r\n\r\n  $tasksContainer.appendChild($fragment);\r\n};\r\n\r\n//Assign task to object listTasks\r\nconst setTask = (form, txtnewTask) => {\r\n  //Validity whitespace in the input new Task\r\n  if (txtnewTask === \"\") {\r\n    alert(\"Campo vacio , Favor Ingresa una tarea 😉😉\");\r\n    return;\r\n  }\r\n  //Create Task\r\n  const task = {\r\n    id: Date.now(),\r\n    task: txtnewTask,\r\n    state: false,\r\n    classActive: \"_\",\r\n  };\r\n\r\n  //Object of the Task (Global)\r\n  listTasks[task.id] = { ...task };\r\n\r\n  //Draw task\r\n  drawTask();\r\n\r\n  //Reset form\r\n  form.reset();\r\n};\r\n\r\n//Tasks\r\nconst taskActions = (e) => {\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n\r\n  //Task selected , completed and incompleted\r\n  if (e.target.matches(\".todo-task-description\") || e.target.matches(\".todo-task-description > *\")) {\r\n    const $taskDescription = e.target.matches(\".todo-task-description\");\r\n    const $todoTask = $taskDescription ? e.target.parentElement : e.target.parentElement.parentElement;\r\n    let activeTask = \"is-active\";\r\n\r\n    if ($todoTask.dataset.state == \"false\") {\r\n      $todoTask.classList.replace(\"_\", `${activeTask}`);\r\n      $todoTask.dataset.state = \"true\";\r\n      listTasks[$todoTask.dataset.id].classActive = `${activeTask}`;\r\n      listTasks[$todoTask.dataset.id].state = true;\r\n    } else {\r\n      $todoTask.classList.replace(`${activeTask}`, \"_\");\r\n      $todoTask.dataset.state = \"false\";\r\n      listTasks[$todoTask.dataset.id].classActive = \"_\";\r\n      listTasks[$todoTask.dataset.id].state = false;\r\n    }\r\n\r\n    if ($btnActiveTasks.classList.contains(\"active\")) {\r\n      tasksLength(false, $countTasks);\r\n      showAndHiddenTasks(true);\r\n    }\r\n\r\n    if ($btnCompletedTasks.classList.contains(\"active\")) {\r\n      tasksLength(true, $countTasks);\r\n      showAndHiddenTasks(false);\r\n    }\r\n  }\r\n\r\n  //Delete Task\r\n  if (e.target.matches(\".todo-task-delete\")) {\r\n    const $task = e.target.parentElement;\r\n    delete listTasks[$task.dataset.id];\r\n    drawTask();\r\n  }\r\n};\r\n\r\n//Operations Tasks\r\nconst todoTaskOperations = (e) => {\r\n  const $btnAllTasks = d.getElementById(\"btnAllTasks\");\r\n  const $btnActiveTasks = d.getElementById(\"btnActiveTasks\");\r\n  const $btnCompletedTasks = d.getElementById(\"btnCompletedTasks\");\r\n  const $detailsTasks = d.querySelectorAll(\".todo-details-btn\");\r\n  const $countTasks = d.querySelector(\".todo-tasks-tags > p > span\");\r\n  const $btnClearCompleted = d.getElementById(\"btnClearCompleted\");\r\n\r\n  if (e.target.matches(\".todo-details-btn\")) {\r\n    detailsTasksActions($detailsTasks, e.target);\r\n  }\r\n\r\n  if (e.target === $btnAllTasks) {\r\n    todoAllTasks($detailsTasks);\r\n  }\r\n\r\n  if (e.target === $btnActiveTasks) {\r\n    drawTask();\r\n    tasksLength(false, $countTasks);\r\n    showAndHiddenTasks(true);\r\n  }\r\n\r\n  if (e.target === $btnCompletedTasks) {\r\n    drawTask();\r\n    tasksLength(true, $countTasks);\r\n    showAndHiddenTasks(false);\r\n  }\r\n\r\n  if (e.target === $btnClearCompleted) {\r\n    const lengthTaskActive = Object.values(listTasks).filter(({ state }) => state).length;\r\n    if (lengthTaskActive > 0) {\r\n      alert(\"Se limpio correctamente las tareas completadas 😎😎\");\r\n    } else {\r\n      alert(\"No hay tareas cumplidas 😒😒\");\r\n    }\r\n    showAndHiddenTasks(true, false);\r\n    drawTask();\r\n    detailsTasksActions($detailsTasks, $btnAllTasks);\r\n  }\r\n};\r\n\r\nconst detailsTasksActions = (details, target) => {\r\n  details.forEach((detail) => {\r\n    detail.classList.remove(\"active\");\r\n  });\r\n  target.classList.add(\"active\");\r\n};\r\n\r\nconst todoAllTasks = () => {\r\n  drawTask();\r\n};\r\n\r\n//Active and Completed Tasks (length)\r\nconst tasksLength = (active = true, countTask) => {\r\n  const completedTask = Object.values(listTasks).filter(({ state }) => state === active).length;\r\n  countTask.textContent = completedTask;\r\n};\r\n\r\n//Show and Hidden Task (Active - Complete) , active = state of the taks\r\n// optionTask = true default , false = deleteTasks Completed\r\nconst showAndHiddenTasks = (active = true, optionTask = true) => {\r\n  Object.values(listTasks).filter(({ id, state }) => {\r\n    if (state === active) {\r\n      d.querySelectorAll(\".todo-task\").forEach((task) => {\r\n        const $idTask = task.dataset.id;\r\n        if (id == $idTask) {\r\n          optionTask ? (task.style.display = \"none\") : delete listTasks[$idTask];\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n"]}