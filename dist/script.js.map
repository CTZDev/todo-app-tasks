{"version":3,"sources":["app/js/script.js","app/js/modules/dark_theme.js","app/js/modules/task.js"],"names":["factory","define","amd","d","document","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","listTasks","$form","drawTask","$tasksContainer","querySelector","$dataTaskActions","querySelectorAll","$templateTask","getElementById","content","$fragment","createDocumentFragment","entries","length","forEach","task","classList","add","innerHTML","remove","values","_ref","id","$clone","cloneNode","textContent","dataset","appendChild","setTask","form","txtnewTask","Date","now","state","target","i","arguments","source","getOwnPropertyDescriptors","defineProperties","_objectSpread2","reset","console","log","lightTheme","body","changeThemeImage","localStorage","setItem","darkTheme","imgSrc","alt","$imgDarkTheme","setAttribute","concat","matchMedia","addEventListener","e","matches","contains","undefined","getItem","preventDefault","$txtnewTask"],"mappings":"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","file":"app/js/script.js","sourcesContent":["import darkTheme from \"./modules/dark_theme.js\";\r\nimport todoTask from \"./modules/task.js\";\r\n\r\ndarkTheme();\r\ntodoTask();\r\n","const d = document;\r\n\r\nexport default function darkTheme() {\r\n  let mq = matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  function lightTheme() {\r\n    d.body.classList.remove(\"dark-theme\");\r\n    d.body.classList.add(\"light-theme\");\r\n    changeThemeImage(\"moon\", \"Icon Dark Mode\");\r\n    localStorage.setItem(\"theme\", \"light\");\r\n  }\r\n\r\n  function darkTheme() {\r\n    d.body.classList.add(\"dark-theme\");\r\n    d.body.classList.remove(\"light-theme\");\r\n    changeThemeImage(\"sun\", \"Icon Light Mode\");\r\n    localStorage.setItem(\"theme\", \"dark\");\r\n  }\r\n\r\n  function changeThemeImage(imgSrc, alt) {\r\n    const $imgDarkTheme = d.querySelector(\".dark-theme-img [data-icon-theme]\");\r\n    $imgDarkTheme.setAttribute(\"src\", `./images/icon-${imgSrc}.svg`);\r\n    $imgDarkTheme.setAttribute(\"alt\", alt);\r\n  }\r\n\r\n  function changeTheme(e) {\r\n    e.matches ? darkTheme() : lightTheme();\r\n  }\r\n  mq.addEventListener(\"change\", changeTheme);\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    if (e.target.matches(\".dark-theme-img\")) {\r\n      if (d.body.classList.contains(\"dark-theme\")) {\r\n        lightTheme();\r\n      } else {\r\n        darkTheme();\r\n      }\r\n    }\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (localStorage.getItem(\"theme\") === undefined) localStorage.setItem(\"theme\", \"light\");\r\n    if (localStorage.getItem(\"theme\") === \"light\") lightTheme();\r\n    if (localStorage.getItem(\"theme\") === \"dark\") darkTheme();\r\n  });\r\n}\r\n","const d = document;\r\n\r\n//List Of Tasks (Global)\r\nconst listTasks = {};\r\n\r\nexport default function todoTask() {\r\n  const $form = d.getElementById(\"formTodo\");\r\n  $form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const $txtnewTask = $form.txtnewTask.value;\r\n    setTask(e.target, $txtnewTask);\r\n  });\r\n\r\n  d.addEventListener(\"DOMContentLoaded\", (e) => {\r\n    drawTask();\r\n  });\r\n}\r\n\r\n//Dibujar mis tareas\r\nconst drawTask = () => {\r\n  const $tasksContainer = d.querySelector(\".todo-tasks-container\");\r\n  const $dataTaskActions = d.querySelectorAll(\"[data-tasks-actions]\");\r\n  const $templateTask = d.getElementById(\"template-task\").content;\r\n  const $fragment = d.createDocumentFragment();\r\n\r\n  //Without Task\r\n  if (Object.entries(listTasks).length === 0) {\r\n    $dataTaskActions.forEach((task) => task.classList.add(\"is-active\"));\r\n    $tasksContainer.innerHTML = `<div class=\"todo-tasks-empty\">No hay tareas pendientes 😊😎</div>`;\r\n    return;\r\n  }\r\n\r\n  //With Task\r\n  $tasksContainer.innerHTML = \"\";\r\n  $dataTaskActions.forEach((task) => task.classList.remove(\"is-active\"));\r\n  Object.values(listTasks).forEach(({ task, id }) => {\r\n    const $clone = $templateTask.cloneNode(true);\r\n    $clone.querySelector(\".todo-task-description > p\").textContent = task;\r\n    $clone.querySelector(\".todo-task-description > p\").dataset.id = id;\r\n    $fragment.appendChild($clone);\r\n  });\r\n\r\n  $tasksContainer.appendChild($fragment);\r\n};\r\n\r\n//Asignar mis tareas al bojeto\r\nconst setTask = (form, txtnewTask) => {\r\n  //Validity whitespace in the input new Task\r\n  if (txtnewTask === \"\") {\r\n    console.log(\"Campo vacio\");\r\n    return;\r\n  }\r\n  //Create Task\r\n  const task = {\r\n    id: Date.now(),\r\n    task: txtnewTask,\r\n    state: false,\r\n  };\r\n\r\n  //Object of the Task (Global)\r\n  listTasks[task.id] = { ...task };\r\n\r\n  //Draw task\r\n  drawTask();\r\n\r\n  //Reset form\r\n  form.reset();\r\n};\r\n"]}